version: '3.1'
services:
  consumer-service:
    build:
      context: ./consumer-service
      dockerfile: Dockerfile
    image: consumer-image
    container_name: consumer-service
    ports:
      - "8081:8081"
    environment:
      - DB_NAME=consumer_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - DB_HOST=consumer-db
      - DB_PORT=5432
      - KAFKA_SERVER=kafka:9092
    depends_on:
      - consumer-db

  consumer-db:
    image: postgres:14-alpine
    container_name: consumer-db
    ports:
      - "6543:5432"
    environment:
      - POSTGRES_DB=consumer_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password

  producer-service:
    build:
      context: ./producer-service
      dockerfile: Dockerfile
    image: producer-image
    container_name: producer-service
    ports:
      - "8080:8080"
    environment:
      - DB_NAME=producer_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - DB_HOST=producer-db
      - DB_PORT=5432
      - KAFKA_SERVER=kafka:9092
    depends_on:
      - producer-db

  producer-db:
    image: postgres:14-alpine
    container_name: producer-db
    ports:
      - "7654:5432"
    environment:
      - POSTGRES_DB=producer_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka:
    image: confluentinc/cp-kafka:7.4.4
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"
    depends_on:
      - "kafka"